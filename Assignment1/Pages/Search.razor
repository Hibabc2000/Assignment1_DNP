@page "/Search"
@attribute [Authorize(Policy = "Search")]
<AuthorizeView>
<h1 onload="OnLoad">Search</h1>

<div>
    <p>List of adults: </p>
    <table class="table" id="adultsTable">
        <thead>
            <tr>
                <th>First name</th>
                <th>Last name</th>
                <th>Hair color</th>
                <th>Eye color</th>
                <th>Age</th>
                <th>Height</th>
                <th>Weight</th>
                <th>Sex</th>
                <th>Job title</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Models.Adult adult in adults)
            {
                <tr>
                   <td>@adult.FirstName</td>
                   <td>@adult.LastName</td>
                   <td>@adult.HairColor</td>
                   <td>@adult.EyeColor</td>
                   <td>@adult.Age</td>
                   <td>@adult.Height</td>
                   <td>@adult.Weight</td>
                   <td>@adult.Sex</td>
                   <td>@adult.JobTitle</td>
                 </tr>
            }
        </tbody>
    </table>
    <p></p>
    <p></p>
</div>

<div>
    <p>Search for adults by: </p>
    <p></p>
    <p>First name: <input type="text" id="firstName" name="firstName" @bind-value="firstName" @bind-value:event="oninput"><button class="btn btn-primary" @onclick="SearchFirstName">Search by first name</button></p>
    <p>Last name:  <input type="text" id="lastName" name="lastName" @bind-value="lastName" @bind-value:event="oninput"><button class="btn btn-primary" @onclick="SearchLastName">Search by last name</button></p>
    <p>
        <label for="hairColor">Select a hair color: </label>
        <select name="hairColor" id="hairColor" @bind-value="eyeColor" @bind-value:event="oninput">
            <option value="blond">Blond</option>
            <option value="red">Red</option>
            <option value="brown">Brown</option>
            <option value="black">Black</option>
            <option value="white">White</option>
            <option value="grey">Grey</option>
            <option value="blue">Blue</option>
            <option value="green">Green</option>
            <option value="leverpostej">Leverpostej</option>
        </select>
        <button class="btn btn-primary" @onclick="SearchHairColor">Search by hair color</button>
    </p>
    <p>
        <label for="eyeColor">Select a hair color: </label>
        <select name="eyeColor" id="eyeColor" @bind-value="hairColor" @bind-value:event="oninput">
            <option value="brown">Brown</option>
            <option value="amber">Amber</option>
            <option value="hazel">Hazel</option>
            <option value="grey">Grey</option>
            <option value="blue">Blue</option>
            <option value="green">Green</option>
        </select>
        <button class="btn btn-primary" @onclick="SearchEyeColor">Search by eye color</button>
    </p>
    <p>Age: <input type="number" id="age" name="age" @bind-value="age" @bind-value:event="oninput"><button class="btn btn-primary" @onclick="SearchAge">Search by age</button></p>
    <p>Weight:  <input type="number" id="weight" name="weight" @bind-value="weight" @bind-value:event="oninput"><button class="btn btn-primary" @onclick="SearchWeight">Search by weight</button></p>
    <p>Height: <input type="number" id="height" name="height" @bind-value="height" @bind-value:event="oninput"><button class="btn btn-primary" @onclick="SearchHeight">Search by height</button></p>
    <p>Sex:  <input type="text" id="sex" name="sex" @bind-value="sex" @bind-value:event="oninput"><button class="btn btn-primary" @onclick="SearchSex">Search by sex</button></p>
    <p>Job title:  <input type="text" id="jobTitle" name="jobTitle" @bind-value="jobTitle" @bind-value:event="oninput"><button class="btn btn-primary" @onclick="SearchJobTitle">Search by job title</button></p>
    <p></p>
    <p><button class="btn btn-primary" @onclick="SearchComplex">Complex Search</button></p>
</div>
</AuthorizeView>
@code {
    private FileData.FileContext file = new FileData.FileContext();

    private IList<Models.Adult> adults = new List<Models.Adult>();

    private void OnLoad()
    {
        adults = file.Adults;
    }

    private string firstName;
    private string lastName;
    private string hairColor;
    private string eyeColor;
    private int age;
    private float weight;
    private int height;
    private string sex;
    private string jobTitle;

    private void SearchFirstName()
    {
        adults = new List<Models.Adult>();
        foreach (Models.Adult item in file.Adults)
        {
            if (item.FirstName.Equals(firstName))
            {
                adults.Add(item);
            }
        }
    }
    private void SearchLastName()
    {
        adults = new List<Models.Adult>();
        foreach (Models.Adult item in file.Adults)
        {
            if (item.LastName.Equals(lastName))
            {
                adults.Add(item);
            }
        }
    }
    private void SearchHairColor()
    {
        adults = new List<Models.Adult>();
        foreach (Models.Adult item in file.Adults)
        {
            if (item.HairColor.Equals(hairColor))
            {
                adults.Add(item);
            }
        }
    }
    private void SearchEyeColor()
    {
        adults = new List<Models.Adult>();
        foreach (Models.Adult item in file.Adults)
        {
            if (item.EyeColor.Equals(eyeColor))
            {
                adults.Add(item);
            }
        }
    }
    private void SearchAge()
    {
        adults = new List<Models.Adult>();
        foreach (Models.Adult item in file.Adults)
        {
            if (item.Age.Equals(age))
            {
                adults.Add(item);
            }
        }
    }
    private void SearchWeight()
    {
        adults = new List<Models.Adult>();
        foreach (Models.Adult item in file.Adults)
        {
            if (item.Weight.Equals(weight))
            {
                adults.Add(item);
            }
        }
    }
    private void SearchHeight()
    {
        adults = new List<Models.Adult>();
        foreach (Models.Adult item in file.Adults)
        {
            if (item.Height.Equals(height))
            {
                adults.Add(item);
            }
        }
    }
    private void SearchSex()
    {
        adults = new List<Models.Adult>();
        foreach (Models.Adult item in file.Adults)
        {
            if (item.Sex.Equals(sex))
            {
                adults.Add(item);
            }
        }
    }
    private void SearchJobTitle()
    {
        adults = new List<Models.Adult>();
        foreach (Models.Adult item in file.Adults)
        {
            if (item.JobTitle.Equals(jobTitle))
            {
                adults.Add(item);
            }
        }
    }

    private void SearchComplex()
    {
        if (firstName != null && firstName != "")
        {
            SearchFirstName();
        }
        if (lastName != null && lastName != "")
        {
            SearchLastName();
        }
        if (hairColor != null && hairColor != "")
        {
            SearchHairColor();
        }
        if (eyeColor != null && eyeColor != "")
        {
            SearchEyeColor();
        }
        SearchAge();
        SearchWeight();
        SearchHeight();
        if (sex != null && sex != "")
        {
            SearchSex();
        }
        if (jobTitle != null && jobTitle != "")
        {
            SearchJobTitle();
        }
    }
}
