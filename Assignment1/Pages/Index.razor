@page "/"
@using Assignment1.LoginFunc

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager


<p>Hello there, please log in</p>

<div class="form-group">
    <label>User name:</label>
    <input type="text" placeholder="user name" @bind-value="username"/>
</div>
<div class="form-group">
    <label>Password</label>
    <input type="text" placeholder="password" @bind-value="password"/>
</div>
@errorMessage

<button class="btn btn-primary" @onclick="PerformLogin">Login</button>

@code {
    private string username;
    private string password;
    private string errorMessage;
    [CascadingParameter]
    public Task<AuthenticationState> authenticationStateTask { get; set; }

    public async Task PerformLogin() {
        authenticationStateTask = AuthenticationStateProvider.GetAuthenticationStateAsync();
        var authState = await authenticationStateTask;
        var user = authState.User;
        errorMessage = "";
        try {
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).ValidateLogin(username, password);
            Console.WriteLine("Logged in succesfully");
            NavigationManager.NavigateTo("/AddAdult");
        } catch (Exception e) {
            errorMessage = e.Message;
        }
    }
}